#!/usr/bin/env python
#
# This is Seisflows
#
# See LICENCE file
#
# sfresume:
# Workflow submission script
#
###############################################################################

# Import system modules
import argparse
import os
import sys
from os.path import join

# Local imports
from seisflows.config import loadpy, names, tilde_expand, Dict
from seisflows.tools import unix
from seisflows.tools.tools import loadobj


def getargs():
    """ This function run argparse (see
    https://docs.python.org/2/howto/argparse.html) to process the arguments
    given by the user along with sfresume. Define default behaviour if they are
    not given and help message when sfresume -h is run
    """
    parser = argparse.ArgumentParser()

    parser.add_argument('--workdir', nargs='?', default=os.getcwd(),
                        help="working directory")

    parser.add_argument('--parameter_file', nargs='?', default='parameters.py',
                        help="parameter file")

    parser.add_argument('--path_file', nargs='?', default='paths.py',
                        help="paths file")

    return parser.parse_args()


if __name__ == "__main__":
    """ Workflow submission script
    """

    args = getargs()

    # Register parameters
    parameters = loadpy(args.parameter_file)
    sys.modules['seisflows_parameters'] = Dict(parameters)

    # Register paths
    paths = tilde_expand(loadpy(args.path_file))
    sys.modules['seisflows_paths'] = Dict(paths)

    unix.mkdir(args.workdir)
    unix.cd(args.workdir)

    # Reload objects
    for name in names:
        fullfile = join(args.workdir, 'output', 'seisflows_'+name+'.p')
        sys.modules['seisflows_'+name] = loadobj(fullfile)

    # Parameter checking
    for name in names:
        sys.modules['seisflows_'+name].check()

    # Submit workflow
    workflow = sys.modules['seisflows_workflow']
    system = sys.modules['seisflows_system']
    system.submit(workflow)
